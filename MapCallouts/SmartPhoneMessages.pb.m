// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "SmartPhoneMessages.pb.h"

@implementation SmartPhoneMessagesRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SmartPhoneMessagesRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface SmartPhoneNodeMessage ()
@property int32_t id;
@property (retain) NSMutableArray* mutableCoordinatesList;
@property (retain) NSString* subject;
@property (retain) NSString* preposition;
@property (retain) NSString* object;
@end

@implementation SmartPhoneNodeMessage

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
@synthesize mutableCoordinatesList;
- (BOOL) hasSubject {
  return !!hasSubject_;
}
- (void) setHasSubject:(BOOL) value {
  hasSubject_ = !!value;
}
@synthesize subject;
- (BOOL) hasPreposition {
  return !!hasPreposition_;
}
- (void) setHasPreposition:(BOOL) value {
  hasPreposition_ = !!value;
}
@synthesize preposition;
- (BOOL) hasObject {
  return !!hasObject_;
}
- (void) setHasObject:(BOOL) value {
  hasObject_ = !!value;
}
@synthesize object;
- (void) dealloc {
  self.mutableCoordinatesList = nil;
  self.subject = nil;
  self.preposition = nil;
  self.object = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.subject = @"";
    self.preposition = @"";
    self.object = @"";
  }
  return self;
}
static SmartPhoneNodeMessage* defaultSmartPhoneNodeMessageInstance = nil;
+ (void) initialize {
  if (self == [SmartPhoneNodeMessage class]) {
    defaultSmartPhoneNodeMessageInstance = [[SmartPhoneNodeMessage alloc] init];
  }
}
+ (SmartPhoneNodeMessage*) defaultInstance {
  return defaultSmartPhoneNodeMessageInstance;
}
- (SmartPhoneNodeMessage*) defaultInstance {
  return defaultSmartPhoneNodeMessageInstance;
}
- (NSArray*) coordinatesList {
  return mutableCoordinatesList;
}
- (SmartPhoneNodeMessage_Point*) coordinatesAtIndex:(int32_t) index {
  id value = [mutableCoordinatesList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  for (SmartPhoneNodeMessage_Point* element in self.coordinatesList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  for (SmartPhoneNodeMessage_Point* element in self.coordinatesList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasSubject) {
    [output writeString:16 value:self.subject];
  }
  if (self.hasPreposition) {
    [output writeString:17 value:self.preposition];
  }
  if (self.hasObject) {
    [output writeString:18 value:self.object];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeInt32Size(1, self.id);
  }
  for (SmartPhoneNodeMessage_Point* element in self.coordinatesList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasSubject) {
    size += computeStringSize(16, self.subject);
  }
  if (self.hasPreposition) {
    size += computeStringSize(17, self.preposition);
  }
  if (self.hasObject) {
    size += computeStringSize(18, self.object);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SmartPhoneNodeMessage*) parseFromData:(NSData*) data {
  return (SmartPhoneNodeMessage*)[[[SmartPhoneNodeMessage builder] mergeFromData:data] build];
}
+ (SmartPhoneNodeMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SmartPhoneNodeMessage*)[[[SmartPhoneNodeMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SmartPhoneNodeMessage*) parseFromInputStream:(NSInputStream*) input {
  return (SmartPhoneNodeMessage*)[[[SmartPhoneNodeMessage builder] mergeFromInputStream:input] build];
}
+ (SmartPhoneNodeMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SmartPhoneNodeMessage*)[[[SmartPhoneNodeMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SmartPhoneNodeMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SmartPhoneNodeMessage*)[[[SmartPhoneNodeMessage builder] mergeFromCodedInputStream:input] build];
}
+ (SmartPhoneNodeMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SmartPhoneNodeMessage*)[[[SmartPhoneNodeMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SmartPhoneNodeMessage_Builder*) builder {
  return [[[SmartPhoneNodeMessage_Builder alloc] init] autorelease];
}
+ (SmartPhoneNodeMessage_Builder*) builderWithPrototype:(SmartPhoneNodeMessage*) prototype {
  return [[SmartPhoneNodeMessage builder] mergeFrom:prototype];
}
- (SmartPhoneNodeMessage_Builder*) builder {
  return [SmartPhoneNodeMessage builder];
}
@end

@interface SmartPhoneNodeMessage_Point ()
@property Float64 x;
@property Float64 y;
@property Float64 z;
@end

@implementation SmartPhoneNodeMessage_Point

- (BOOL) hasX {
  return !!hasX_;
}
- (void) setHasX:(BOOL) value {
  hasX_ = !!value;
}
@synthesize x;
- (BOOL) hasY {
  return !!hasY_;
}
- (void) setHasY:(BOOL) value {
  hasY_ = !!value;
}
@synthesize y;
- (BOOL) hasZ {
  return !!hasZ_;
}
- (void) setHasZ:(BOOL) value {
  hasZ_ = !!value;
}
@synthesize z;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.x = 0;
    self.y = 0;
    self.z = 0;
  }
  return self;
}
static SmartPhoneNodeMessage_Point* defaultSmartPhoneNodeMessage_PointInstance = nil;
+ (void) initialize {
  if (self == [SmartPhoneNodeMessage_Point class]) {
    defaultSmartPhoneNodeMessage_PointInstance = [[SmartPhoneNodeMessage_Point alloc] init];
  }
}
+ (SmartPhoneNodeMessage_Point*) defaultInstance {
  return defaultSmartPhoneNodeMessage_PointInstance;
}
- (SmartPhoneNodeMessage_Point*) defaultInstance {
  return defaultSmartPhoneNodeMessage_PointInstance;
}
- (BOOL) isInitialized {
  if (!self.hasX) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasX) {
    [output writeDouble:1 value:self.x];
  }
  if (self.hasY) {
    [output writeDouble:2 value:self.y];
  }
  if (self.hasZ) {
    [output writeDouble:3 value:self.z];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasX) {
    size += computeDoubleSize(1, self.x);
  }
  if (self.hasY) {
    size += computeDoubleSize(2, self.y);
  }
  if (self.hasZ) {
    size += computeDoubleSize(3, self.z);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SmartPhoneNodeMessage_Point*) parseFromData:(NSData*) data {
  return (SmartPhoneNodeMessage_Point*)[[[SmartPhoneNodeMessage_Point builder] mergeFromData:data] build];
}
+ (SmartPhoneNodeMessage_Point*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SmartPhoneNodeMessage_Point*)[[[SmartPhoneNodeMessage_Point builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SmartPhoneNodeMessage_Point*) parseFromInputStream:(NSInputStream*) input {
  return (SmartPhoneNodeMessage_Point*)[[[SmartPhoneNodeMessage_Point builder] mergeFromInputStream:input] build];
}
+ (SmartPhoneNodeMessage_Point*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SmartPhoneNodeMessage_Point*)[[[SmartPhoneNodeMessage_Point builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SmartPhoneNodeMessage_Point*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SmartPhoneNodeMessage_Point*)[[[SmartPhoneNodeMessage_Point builder] mergeFromCodedInputStream:input] build];
}
+ (SmartPhoneNodeMessage_Point*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SmartPhoneNodeMessage_Point*)[[[SmartPhoneNodeMessage_Point builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SmartPhoneNodeMessage_Point_Builder*) builder {
  return [[[SmartPhoneNodeMessage_Point_Builder alloc] init] autorelease];
}
+ (SmartPhoneNodeMessage_Point_Builder*) builderWithPrototype:(SmartPhoneNodeMessage_Point*) prototype {
  return [[SmartPhoneNodeMessage_Point builder] mergeFrom:prototype];
}
- (SmartPhoneNodeMessage_Point_Builder*) builder {
  return [SmartPhoneNodeMessage_Point builder];
}
@end

@interface SmartPhoneNodeMessage_Point_Builder()
@property (retain) SmartPhoneNodeMessage_Point* result;
@end

@implementation SmartPhoneNodeMessage_Point_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SmartPhoneNodeMessage_Point alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SmartPhoneNodeMessage_Point_Builder*) clear {
  self.result = [[[SmartPhoneNodeMessage_Point alloc] init] autorelease];
  return self;
}
- (SmartPhoneNodeMessage_Point_Builder*) clone {
  return [SmartPhoneNodeMessage_Point builderWithPrototype:result];
}
- (SmartPhoneNodeMessage_Point*) defaultInstance {
  return [SmartPhoneNodeMessage_Point defaultInstance];
}
- (SmartPhoneNodeMessage_Point*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SmartPhoneNodeMessage_Point*) buildPartial {
  SmartPhoneNodeMessage_Point* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SmartPhoneNodeMessage_Point_Builder*) mergeFrom:(SmartPhoneNodeMessage_Point*) other {
  if (other == [SmartPhoneNodeMessage_Point defaultInstance]) {
    return self;
  }
  if (other.hasX) {
    [self setX:other.x];
  }
  if (other.hasY) {
    [self setY:other.y];
  }
  if (other.hasZ) {
    [self setZ:other.z];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SmartPhoneNodeMessage_Point_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SmartPhoneNodeMessage_Point_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setX:[input readDouble]];
        break;
      }
      case 17: {
        [self setY:[input readDouble]];
        break;
      }
      case 25: {
        [self setZ:[input readDouble]];
        break;
      }
    }
  }
}
- (BOOL) hasX {
  return result.hasX;
}
- (Float64) x {
  return result.x;
}
- (SmartPhoneNodeMessage_Point_Builder*) setX:(Float64) value {
  result.hasX = YES;
  result.x = value;
  return self;
}
- (SmartPhoneNodeMessage_Point_Builder*) clearX {
  result.hasX = NO;
  result.x = 0;
  return self;
}
- (BOOL) hasY {
  return result.hasY;
}
- (Float64) y {
  return result.y;
}
- (SmartPhoneNodeMessage_Point_Builder*) setY:(Float64) value {
  result.hasY = YES;
  result.y = value;
  return self;
}
- (SmartPhoneNodeMessage_Point_Builder*) clearY {
  result.hasY = NO;
  result.y = 0;
  return self;
}
- (BOOL) hasZ {
  return result.hasZ;
}
- (Float64) z {
  return result.z;
}
- (SmartPhoneNodeMessage_Point_Builder*) setZ:(Float64) value {
  result.hasZ = YES;
  result.z = value;
  return self;
}
- (SmartPhoneNodeMessage_Point_Builder*) clearZ {
  result.hasZ = NO;
  result.z = 0;
  return self;
}
@end

@interface SmartPhoneNodeMessage_Builder()
@property (retain) SmartPhoneNodeMessage* result;
@end

@implementation SmartPhoneNodeMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SmartPhoneNodeMessage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SmartPhoneNodeMessage_Builder*) clear {
  self.result = [[[SmartPhoneNodeMessage alloc] init] autorelease];
  return self;
}
- (SmartPhoneNodeMessage_Builder*) clone {
  return [SmartPhoneNodeMessage builderWithPrototype:result];
}
- (SmartPhoneNodeMessage*) defaultInstance {
  return [SmartPhoneNodeMessage defaultInstance];
}
- (SmartPhoneNodeMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SmartPhoneNodeMessage*) buildPartial {
  SmartPhoneNodeMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SmartPhoneNodeMessage_Builder*) mergeFrom:(SmartPhoneNodeMessage*) other {
  if (other == [SmartPhoneNodeMessage defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.mutableCoordinatesList.count > 0) {
    if (result.mutableCoordinatesList == nil) {
      result.mutableCoordinatesList = [NSMutableArray array];
    }
    [result.mutableCoordinatesList addObjectsFromArray:other.mutableCoordinatesList];
  }
  if (other.hasSubject) {
    [self setSubject:other.subject];
  }
  if (other.hasPreposition) {
    [self setPreposition:other.preposition];
  }
  if (other.hasObject) {
    [self setObject:other.object];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SmartPhoneNodeMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SmartPhoneNodeMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        SmartPhoneNodeMessage_Point_Builder* subBuilder = [SmartPhoneNodeMessage_Point builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCoordinates:[subBuilder buildPartial]];
        break;
      }
      case 130: {
        [self setSubject:[input readString]];
        break;
      }
      case 138: {
        [self setPreposition:[input readString]];
        break;
      }
      case 146: {
        [self setObject:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (SmartPhoneNodeMessage_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (SmartPhoneNodeMessage_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (NSArray*) coordinatesList {
  if (result.mutableCoordinatesList == nil) { return [NSArray array]; }
  return result.mutableCoordinatesList;
}
- (SmartPhoneNodeMessage_Point*) coordinatesAtIndex:(int32_t) index {
  return [result coordinatesAtIndex:index];
}
- (SmartPhoneNodeMessage_Builder*) replaceCoordinatesAtIndex:(int32_t) index with:(SmartPhoneNodeMessage_Point*) value {
  [result.mutableCoordinatesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SmartPhoneNodeMessage_Builder*) addAllCoordinates:(NSArray*) values {
  if (result.mutableCoordinatesList == nil) {
    result.mutableCoordinatesList = [NSMutableArray array];
  }
  [result.mutableCoordinatesList addObjectsFromArray:values];
  return self;
}
- (SmartPhoneNodeMessage_Builder*) clearCoordinatesList {
  result.mutableCoordinatesList = nil;
  return self;
}
- (SmartPhoneNodeMessage_Builder*) addCoordinates:(SmartPhoneNodeMessage_Point*) value {
  if (result.mutableCoordinatesList == nil) {
    result.mutableCoordinatesList = [NSMutableArray array];
  }
  [result.mutableCoordinatesList addObject:value];
  return self;
}
- (BOOL) hasSubject {
  return result.hasSubject;
}
- (NSString*) subject {
  return result.subject;
}
- (SmartPhoneNodeMessage_Builder*) setSubject:(NSString*) value {
  result.hasSubject = YES;
  result.subject = value;
  return self;
}
- (SmartPhoneNodeMessage_Builder*) clearSubject {
  result.hasSubject = NO;
  result.subject = @"";
  return self;
}
- (BOOL) hasPreposition {
  return result.hasPreposition;
}
- (NSString*) preposition {
  return result.preposition;
}
- (SmartPhoneNodeMessage_Builder*) setPreposition:(NSString*) value {
  result.hasPreposition = YES;
  result.preposition = value;
  return self;
}
- (SmartPhoneNodeMessage_Builder*) clearPreposition {
  result.hasPreposition = NO;
  result.preposition = @"";
  return self;
}
- (BOOL) hasObject {
  return result.hasObject;
}
- (NSString*) object {
  return result.object;
}
- (SmartPhoneNodeMessage_Builder*) setObject:(NSString*) value {
  result.hasObject = YES;
  result.object = value;
  return self;
}
- (SmartPhoneNodeMessage_Builder*) clearObject {
  result.hasObject = NO;
  result.object = @"";
  return self;
}
@end

@interface SmartPhoneDataMessage ()
@property int32_t id;
@property int32_t width;
@property int32_t height;
@property (retain) NSData* mapData;
@end

@implementation SmartPhoneDataMessage

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasWidth {
  return !!hasWidth_;
}
- (void) setHasWidth:(BOOL) value {
  hasWidth_ = !!value;
}
@synthesize width;
- (BOOL) hasHeight {
  return !!hasHeight_;
}
- (void) setHasHeight:(BOOL) value {
  hasHeight_ = !!value;
}
@synthesize height;
- (BOOL) hasMapData {
  return !!hasMapData_;
}
- (void) setHasMapData:(BOOL) value {
  hasMapData_ = !!value;
}
@synthesize mapData;
- (void) dealloc {
  self.mapData = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.width = 0;
    self.height = 0;
    self.mapData = [NSData data];
  }
  return self;
}
static SmartPhoneDataMessage* defaultSmartPhoneDataMessageInstance = nil;
+ (void) initialize {
  if (self == [SmartPhoneDataMessage class]) {
    defaultSmartPhoneDataMessageInstance = [[SmartPhoneDataMessage alloc] init];
  }
}
+ (SmartPhoneDataMessage*) defaultInstance {
  return defaultSmartPhoneDataMessageInstance;
}
- (SmartPhoneDataMessage*) defaultInstance {
  return defaultSmartPhoneDataMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasWidth) {
    [output writeInt32:16 value:self.width];
  }
  if (self.hasHeight) {
    [output writeInt32:17 value:self.height];
  }
  if (self.hasMapData) {
    [output writeData:18 value:self.mapData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeInt32Size(1, self.id);
  }
  if (self.hasWidth) {
    size += computeInt32Size(16, self.width);
  }
  if (self.hasHeight) {
    size += computeInt32Size(17, self.height);
  }
  if (self.hasMapData) {
    size += computeDataSize(18, self.mapData);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SmartPhoneDataMessage*) parseFromData:(NSData*) data {
  return (SmartPhoneDataMessage*)[[[SmartPhoneDataMessage builder] mergeFromData:data] build];
}
+ (SmartPhoneDataMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SmartPhoneDataMessage*)[[[SmartPhoneDataMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SmartPhoneDataMessage*) parseFromInputStream:(NSInputStream*) input {
  return (SmartPhoneDataMessage*)[[[SmartPhoneDataMessage builder] mergeFromInputStream:input] build];
}
+ (SmartPhoneDataMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SmartPhoneDataMessage*)[[[SmartPhoneDataMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SmartPhoneDataMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SmartPhoneDataMessage*)[[[SmartPhoneDataMessage builder] mergeFromCodedInputStream:input] build];
}
+ (SmartPhoneDataMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SmartPhoneDataMessage*)[[[SmartPhoneDataMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SmartPhoneDataMessage_Builder*) builder {
  return [[[SmartPhoneDataMessage_Builder alloc] init] autorelease];
}
+ (SmartPhoneDataMessage_Builder*) builderWithPrototype:(SmartPhoneDataMessage*) prototype {
  return [[SmartPhoneDataMessage builder] mergeFrom:prototype];
}
- (SmartPhoneDataMessage_Builder*) builder {
  return [SmartPhoneDataMessage builder];
}
@end

@interface SmartPhoneDataMessage_Builder()
@property (retain) SmartPhoneDataMessage* result;
@end

@implementation SmartPhoneDataMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SmartPhoneDataMessage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SmartPhoneDataMessage_Builder*) clear {
  self.result = [[[SmartPhoneDataMessage alloc] init] autorelease];
  return self;
}
- (SmartPhoneDataMessage_Builder*) clone {
  return [SmartPhoneDataMessage builderWithPrototype:result];
}
- (SmartPhoneDataMessage*) defaultInstance {
  return [SmartPhoneDataMessage defaultInstance];
}
- (SmartPhoneDataMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SmartPhoneDataMessage*) buildPartial {
  SmartPhoneDataMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SmartPhoneDataMessage_Builder*) mergeFrom:(SmartPhoneDataMessage*) other {
  if (other == [SmartPhoneDataMessage defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasWidth) {
    [self setWidth:other.width];
  }
  if (other.hasHeight) {
    [self setHeight:other.height];
  }
  if (other.hasMapData) {
    [self setMapData:other.mapData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SmartPhoneDataMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SmartPhoneDataMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 128: {
        [self setWidth:[input readInt32]];
        break;
      }
      case 136: {
        [self setHeight:[input readInt32]];
        break;
      }
      case 146: {
        [self setMapData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (SmartPhoneDataMessage_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (SmartPhoneDataMessage_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasWidth {
  return result.hasWidth;
}
- (int32_t) width {
  return result.width;
}
- (SmartPhoneDataMessage_Builder*) setWidth:(int32_t) value {
  result.hasWidth = YES;
  result.width = value;
  return self;
}
- (SmartPhoneDataMessage_Builder*) clearWidth {
  result.hasWidth = NO;
  result.width = 0;
  return self;
}
- (BOOL) hasHeight {
  return result.hasHeight;
}
- (int32_t) height {
  return result.height;
}
- (SmartPhoneDataMessage_Builder*) setHeight:(int32_t) value {
  result.hasHeight = YES;
  result.height = value;
  return self;
}
- (SmartPhoneDataMessage_Builder*) clearHeight {
  result.hasHeight = NO;
  result.height = 0;
  return self;
}
- (BOOL) hasMapData {
  return result.hasMapData;
}
- (NSData*) mapData {
  return result.mapData;
}
- (SmartPhoneDataMessage_Builder*) setMapData:(NSData*) value {
  result.hasMapData = YES;
  result.mapData = value;
  return self;
}
- (SmartPhoneDataMessage_Builder*) clearMapData {
  result.hasMapData = NO;
  result.mapData = [NSData data];
  return self;
}
@end

